import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o,c as p,b as n,d as s,a as c,e as l}from"./app-DkYyH7Yy.js";const i={},r=n("p",null,"В этом руководстве вы узнаете, как использовать компоненты Vue и синтаксис Vue в вашем проекте VuePress.",-1),u=n("h2",{id:"импорт-компонентов-vue-глобально",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#импорт-компонентов-vue-глобально"},[n("span",null,"Импорт компонентов Vue глобально")])],-1),d=n("h3",{id:"регистрация-через-vuepress-plugin-register-components",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#регистрация-через-vuepress-plugin-register-components"},[n("span",null,[s("Регистрация через "),n("code",null,"@vuepress/plugin-register-components")])])],-1),k=n("p",null,[s("Вы можете автоматически регистрировать компоненты с помощью плагина "),n("code",null,"@vuepress/plugin-register-components"),s(".")],-1),m={href:"https://v2.vuepress.vuejs.org/reference/plugin/register-components.html",target:"_blank",rel:"noopener noreferrer"},g=l(`<h3 id="регистрация-через-clientconfigfile" tabindex="-1"><a class="header-anchor" href="#регистрация-через-clientconfigfile"><span>Регистрация через ClientConfigFile</span></a></h3><p>Вы можете создать <code>.vuepress/client.ts</code> и зарегистрировать компоненты вручную.</p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/client.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&quot;./MyComponent.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">enhance</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;MyComponent&quot;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="использование-синтаксиса-и-компонентов-vue-в-markdown" tabindex="-1"><a class="header-anchor" href="#использование-синтаксиса-и-компонентов-vue-в-markdown"><span>Использование синтаксиса и компонентов Vue в Markdown</span></a></h2><p>Вы можете использовать синтаксис Vue непосредственно в Markdown. Для конкретного использования смотрите [VuePress → Markdown](../vuepress/markdown.md#Use -vue in -markdown-)</p><p>Если вам нужно импортировать компоненты Vue в Markdown, обратите внимание, что вы не можете использовать относительные пути для импорта или писать несколько блоков <code>&lt;script&gt;</code>.</p><div class="hint-container info"><p class="hint-container-title">Markdown с Vue SFC</p><p>Каждый файл Markdown сначала компилируется в HTML, а затем преобразуется в компонент одного файла Vue (SFC). Другими словами, вы можете писать файлы Markdown, такие как Vue SFC:</p><p>Теги <code>&lt;script&gt;</code> и <code>&lt;style&gt;</code> напрямую обрабатываются как теги в Vue SFC. Другими словами, они продвигаются из тега <code>&lt;template&gt;</code> на верхний уровень SFC.<br> Весь контент, кроме тегов <code>&lt;script&gt;</code> и <code>&lt;style&gt;</code>, будет скомпилирован в HTML, а затем обработан как теги <code>&lt;template&gt;</code> в Vue SFC.</p><p>Поскольку однофайловые компоненты Vue могут содержать только один тег <code>&lt;script&gt;</code>, вам следует избегать использования более одного тега <code>&lt;script&gt;</code> в VuePress Markdown.</p><p>Кроме того, поскольку Markdown будет преобразован в однофайловые компоненты Vue в каталоге кеша, любой импорт относительного пути будет недопустимым в Vue SFC.</p></div><p>Чтобы корректно импортировать собственные компоненты, вам необходимо создать для них псевдонимы, сделать это можно с помощью опции <code>alias</code>:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress/utils&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  alias<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;@MyComponent&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;components/MyComponent.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
import MyComponent from &quot;@MyComponent&quot;;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Это немного сложнее, но если компонент используется только на одной странице, такой импорт имеет преимущества:</p><ul><li>Глобальный импорт означает, что код компонента нужно загрузить при инициализации VuePress, то есть при посещении первой страницы</li><li>Импорт в Markdown приводит к включению кода компонента в код страницы, чтобы он загружался только при посещении страницы</li></ul>`,12);function v(h,f){const e=a("ExternalLinkIcon");return o(),p("div",null,[r,u,d,k,n("p",null,[s("Подробнее об использовании плагина смотрите в "),n("a",m,[s("Официальной документации"),c(e)]),s(".")]),g])}const V=t(i,[["render",v],["__file","component.html.vue"]]),w=JSON.parse('{"path":"/cookbook/advanced/component.html","title":"Использование компонентов","lang":"ru-RU","frontmatter":{"title":"Использование компонентов","icon":"puzzle-piece","order":1,"category":["Руководство","Кастомизация"],"tag":["Компоненты","Кастомизация"],"description":"В этом руководстве вы узнаете, как использовать компоненты Vue и синтаксис Vue в вашем проекте VuePress.","head":[["meta",{"property":"og:url","content":"https://theme-hope-ru.vuejs.press/cookbook/advanced/component.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Использование компонентов"}],["meta",{"property":"og:description","content":"В этом руководстве вы узнаете, как использовать компоненты Vue и синтаксис Vue в вашем проекте VuePress."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2024-02-20T17:13:13.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"Компоненты"}],["meta",{"property":"article:tag","content":"Кастомизация"}],["meta",{"property":"article:modified_time","content":"2024-02-20T17:13:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Использование компонентов\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-20T17:13:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Импорт компонентов Vue глобально","slug":"импорт-компонентов-vue-глобально","link":"#импорт-компонентов-vue-глобально","children":[{"level":3,"title":"Регистрация через @vuepress/plugin-register-components","slug":"регистрация-через-vuepress-plugin-register-components","link":"#регистрация-через-vuepress-plugin-register-components","children":[]},{"level":3,"title":"Регистрация через ClientConfigFile","slug":"регистрация-через-clientconfigfile","link":"#регистрация-через-clientconfigfile","children":[]}]},{"level":2,"title":"Использование синтаксиса и компонентов Vue в Markdown","slug":"использование-синтаксиса-и-компонентов-vue-в-markdown","link":"#использование-синтаксиса-и-компонентов-vue-в-markdown","children":[]}],"git":{"createdTime":1679316302000,"updatedTime":1708449193000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2}]},"readingTime":{"minutes":1.21,"words":364},"filePathRelative":"cookbook/advanced/component.md","localizedDate":"20 марта 2023 г.","excerpt":"<p>В этом руководстве вы узнаете, как использовать компоненты Vue и синтаксис Vue в вашем проекте VuePress.</p>\\n","autoDesc":true}');export{V as comp,w as data};
