import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as p,c as r,a as d,w as n,e as i,d as s,b as e}from"./app-DkYyH7Yy.js";const u={},h=i('<h2 id="медленная-холодная-загрузка-с-помощью-vite" tabindex="-1"><a class="header-anchor" href="#медленная-холодная-загрузка-с-помощью-vite"><span>Медленная холодная загрузка с помощью Vite</span></a></h2><p>Это ожидаемое поведение. Мы добавляем больше функций, что означает, что у нас есть от 2 до 8 строк кода по сравнению с <code>@vuepress/theme-default</code> в зависимости от используемых вами функций. Таким образом, ожидается, что транспиляция и отправка кода темы и плагинов в браузер увеличится с <code>0.8s - 2s</code> в <code>@vuepress/theme-default</code> до <code>3s - 10s</code> (диапазон зависит от производительности машины).</p><div class="hint-container info"><p class="hint-container-title">Бремя тряски деревьев</p><p>Чтобы полностью поддерживать Tree-shaking в функциональности и стилях, темы и плагины выполняют дополнительную работу, включая модульность, частичное внедрение, создание временных файлов и т. д. Эти дополнительные функции обеспечивают удаление неиспользуемого кода функции на этапе сборки, но также означает, что необходимо выполнить больше логики и загрузить больше фрагментированных файлов в режиме разработки.</p><p>Чувак, ты не можешь рассчитывать на полную поддержку древовидной структуры и при этом быть очень быстрым при запуске сервера разработки, они противоречивы.</p></div><div class="hint-container info"><p class="hint-container-title">система стилей</p><p>Чтобы стили компонентов были привязаны к компоненту, мы разделили стили по иерархии компонентов и импортировали их в компоненты, что сильно замедлило скорость.</p><ul><li><p><code>@vuepress/theme-default</code> помещает все стили вместе в папку <code>styles</code> и полностью их импортирует, так что <code>sass</code> нужно будет скомпилировать только один раз, а vite нужно будет отправить только 1 дополнительный веб-запрос. Вот почему это быстро.</p><p>Но это позволит отвязать стиль от компонентов, и они все равно будут внедрены. Таким образом, когда вы переопределяете компонент или макет, вам нужно переопределять старые стили для создания нужных стилей.</p></li><li><p><code>vuepress-theme-hope</code> связывает стили с компонентами, но это означает, что <code>sass</code> должен компилировать стили для каждого компонента, а vite должен отправлять дополнительный запрос для каждого компонента. Из-за того, что <code>vuepress-theme-hope</code> имеет от 2 до 6 компонентов (в зависимости от того, активируете ли вы функции блога или нет), по сравнению с <code>@vuepress/theme-default</code> это займет дополнительное время <code>2.4s - 4s</code> для этого.</p><p>Но таким образом вы можете легко переопределить компонент вместе с его стилями.</p></li></ul><p>Таким образом, по вышеуказанным причинам у <code>vuepress-theme-hope</code> будет в среднем в 4 раза больше кода и в 10 раз больше запросов по сравнению с <code>@vuepress/theme-default</code>, поэтому время увеличивается с <code>2s</code> до <code>10s</code> разумно и ожидаемо.</p></div><div class="hint-container tip"><p class="hint-container-title">Не влияет на HMR и скорость онлайн</p><p>Не волнуйтесь, вышеуказанные дополнительные накладные расходы в основном возникают при загрузке кода. Из-за большого размера неоптимизированного кода в среде разработки соответствующее время после обновления также увеличится.</p><ul><li><p>Эти дополнительные накладные расходы не влияют на HMR, поэтому при редактировании файла Markdown ответ HMR страницы может оставаться на уровне 100 мс.</p></li><li><p>Неиспользуемый код будет удален на этапе сборки при проектировании скважины, поэтому производственная среда обычно добавляет только дополнительные 200–500 КБ размера в запись JS по сравнению с темой по умолчанию и около 100 мс дополнительного времени выполнения скрипта, поэтому влияние онлайн очень маленький.</p></li></ul></div><h2 id="import-в-css-не-работает" tabindex="-1"><a class="header-anchor" href="#import-в-css-не-работает"><span><code>@import()</code> в CSS не работает</span></a></h2><p>В VuePress2 импорт веб-CSS через <code>@import</code> в <code>index.scss</code> не имеет никакого эффекта. Возможно, вам придется вручную импортировать его в параметр <code>head</code> вашей конфигурации VuePress.</p>',7),m=e("div",{class:"language-typescript line-numbers-mode","data-ext":"ts","data-title":"ts"},[e("pre",{ts:"",class:"language-typescript"},[e("code",null,[e("span",{class:"token keyword"},"import"),s(),e("span",{class:"token punctuation"},"{"),s(" defineUserConfig "),e("span",{class:"token punctuation"},"}"),s(),e("span",{class:"token keyword"},"from"),s(),e("span",{class:"token string"},'"vuepress"'),e("span",{class:"token punctuation"},";"),s(`

`),e("span",{class:"token keyword"},"export"),s(),e("span",{class:"token keyword"},"default"),s(),e("span",{class:"token function"},"defineUserConfig"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},"{"),s(`
  head`),e("span",{class:"token operator"},":"),s(),e("span",{class:"token punctuation"},"["),s(`
    `),e("span",{class:"token punctuation"},"["),s(`
      `),e("span",{class:"token string"},'"link"'),e("span",{class:"token punctuation"},","),s(`
      `),e("span",{class:"token punctuation"},"{"),s(`
        rel`),e("span",{class:"token operator"},":"),s(),e("span",{class:"token string"},'"stylesheet"'),e("span",{class:"token punctuation"},","),s(`
        href`),e("span",{class:"token operator"},":"),s(),e("span",{class:"token string"},'"YOUR_CSS_URL"'),e("span",{class:"token punctuation"},","),s(`
      `),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},","),s(`
    `),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},","),s(`
  `),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},","),s(`

  `),e("span",{class:"token comment"},"// ..."),s(`
`),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s(`
`)])]),e("div",{class:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("br"),e("br"),e("br"),e("br")]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),v=e("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[e("pre",{js:"",class:"language-javascript"},[e("code",null,[e("span",{class:"token keyword"},"export"),s(),e("span",{class:"token keyword"},"default"),s(),e("span",{class:"token punctuation"},"{"),s(`
  `),e("span",{class:"token literal-property property"},"head"),e("span",{class:"token operator"},":"),s(),e("span",{class:"token punctuation"},"["),s(`
    `),e("span",{class:"token punctuation"},"["),s(`
      `),e("span",{class:"token string"},'"link"'),e("span",{class:"token punctuation"},","),s(`
      `),e("span",{class:"token punctuation"},"{"),s(`
        `),e("span",{class:"token literal-property property"},"rel"),e("span",{class:"token operator"},":"),s(),e("span",{class:"token string"},'"stylesheet"'),e("span",{class:"token punctuation"},","),s(`
        `),e("span",{class:"token literal-property property"},"href"),e("span",{class:"token operator"},":"),s(),e("span",{class:"token string"},'"YOUR_CSS_URL"'),e("span",{class:"token punctuation"},","),s(`
      `),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},","),s(`
    `),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},","),s(`
  `),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},","),s(`

  `),e("span",{class:"token comment"},"// ..."),s(`
`),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},";"),s(`
`)])]),e("div",{class:"highlight-lines"},[e("br"),e("br"),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("div",{class:"highlight-line"}," "),e("br"),e("br"),e("br"),e("br")]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),k=i('<div class="hint-container info"><p class="hint-container-title">Причина</p><ol><li>CSS, импортированный через <code>@import</code> в Sass, будет скомпилирован в стандартный синтаксис CSS <code>@import</code>.</li><li>Синтаксис CSS <code>@import</code> работает только в верхней части файла css.</li><li>Чтобы придать пользовательским стилям более высокий приоритет, мы будем импортировать пользовательские стили после стилей темы и плагинов.</li><li>Во время сборки приложения VuePress2 все стили сжимаются в один файл CSS.</li></ol><p>Вышеприведенное приводит к тому, что пользовательский импорт CSS <code>@import</code> в Sass появляется в середине окончательного файла CSS и, следовательно, недействителен.</p><p>Тема по умолчанию также имеет ту же проблему, и это не может быть исправлено на стороне темы.</p></div>',1);function g(b,f){const o=l("CodeTabs");return p(),r("div",null,[h,d(o,{id:"64",data:[{id:"TS"},{id:"JS"}],"tab-id":"language"},{title0:n(({value:t,isActive:a})=>[s("TS")]),title1:n(({value:t,isActive:a})=>[s("JS")]),tab0:n(({value:t,isActive:a})=>[m]),tab1:n(({value:t,isActive:a})=>[v]),_:1}),k])}const _=c(u,[["render",g],["__file","vite.html.vue"]]),C=JSON.parse('{"path":"/faq/vite.html","title":"Vite FAQ","lang":"ru-RU","frontmatter":{"title":"Vite FAQ","icon":"circle-question","category":["FAQ"],"description":"Медленная холодная загрузка с помощью Vite Это ожидаемое поведение. Мы добавляем больше функций, что означает, что у нас есть от 2 до 8 строк кода по сравнению с @vuepress/theme...","head":[["meta",{"property":"og:url","content":"https://theme-hope-ru.vuejs.press/faq/vite.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Vite FAQ"}],["meta",{"property":"og:description","content":"Медленная холодная загрузка с помощью Vite Это ожидаемое поведение. Мы добавляем больше функций, что означает, что у нас есть от 2 до 8 строк кода по сравнению с @vuepress/theme..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2023-03-20T12:45:02.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2023-03-20T12:45:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vite FAQ\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-20T12:45:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Медленная холодная загрузка с помощью Vite","slug":"медленная-холодная-загрузка-с-помощью-vite","link":"#медленная-холодная-загрузка-с-помощью-vite","children":[]},{"level":2,"title":"@import() в CSS не работает","slug":"import-в-css-не-работает","link":"#import-в-css-не-работает","children":[]}],"git":{"createdTime":1679316302000,"updatedTime":1679316302000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":2.15,"words":645},"filePathRelative":"faq/vite.md","localizedDate":"20 марта 2023 г.","excerpt":"","autoDesc":true}');export{_ as comp,C as data};
